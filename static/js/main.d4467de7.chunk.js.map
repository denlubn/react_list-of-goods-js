{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_PARAMETER_ALPHABET","SORT_PARAMETER_LENGTH","GoodList","goods","map","good","App","useState","sortParameter","setSortParameter","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA0B,WAC1BC,EAAwB,SAExBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SAgCN,IAAMC,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SAA0BT,EAA1B,GAAiE,IAA9BK,EAA6B,EAA7BA,cAAeE,EAAc,EAAdA,WAC1CG,EAAa,YAAOV,GAoB1B,OAlBIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKR,EACH,OAAOe,EAAME,cAAcD,GAE7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAMcO,CACnBrB,EAAiB,CAAES,gBAAeE,eAGpC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAkBR,IAEhCwB,QAAS,kBAAMf,EAAiBT,IALlC,iCAUA,wBACEsB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAkBP,IAEhCuB,QAAS,kBAAMf,EAAiBR,IALlC,4BAUA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAab,IAEfc,QAAS,kBAAMb,GAAeD,IALhC,sBAUEF,GAAiBE,IACjB,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAiB,IACjBE,GAAc,IALlB,sBAcJ,cAAC,EAAD,CAAUR,MAAOS,QC/GvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4467de7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_PARAMETER_ALPHABET = 'alphabet';\nconst SORT_PARAMETER_LENGTH = 'length';\n\nconst GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nfunction getPreparedGoods(goods, { sortParameter, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortParameter) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortParameter) {\n        case SORT_PARAMETER_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_PARAMETER_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortParameter, setSortParameter] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortParameter, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortParameter !== SORT_PARAMETER_ALPHABET,\n          })}\n          onClick={() => setSortParameter(SORT_PARAMETER_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortParameter !== SORT_PARAMETER_LENGTH,\n          })}\n          onClick={() => setSortParameter(SORT_PARAMETER_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortParameter || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortParameter('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}